{"ast":null,"code":"var _jsxFileName = \"/Users/acarneiro/General-Assembly/unit-2/project2/weather-app/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HomeTemp from './HomeTemp.js';\nimport NextTemp from './NextTemp.js';\nimport './App.css';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n  let [input, updateInput] = useState('');\n  let [savedCity, updateSavedCity] = useState('');\n  let [savedCountry, updateSavedCountry] = useState('');\n  let [currentTemp, updateTemp] = useState(0);\n  let [currentTime, updateTime] = useState('');\n  let [currentIndex, updateCurrentIndex] = useState({});\n  let [next24HoursTemp, update24HoursTemp] = useState(0);\n  let [next24HoursTime, update24HoursTime] = useState('');\n  let [next24HoursIndex, update24HoursIndex] = useState({});\n  let [next48HoursTemp, update48HoursTemp] = useState(0);\n  let [next48HoursTime, update48HoursTime] = useState('');\n  let [next48HoursIndex, update48HoursIndex] = useState({});\n  let [next72HoursTemp, update72HoursTemp] = useState(0);\n  let [next72HoursTime, update72HoursTime] = useState('');\n  let [next72HoursIndex, update72HoursIndex] = useState({});\n  let [next96HoursTemp, update96HoursTemp] = useState(0);\n  let [next96HoursTime, update96HoursTime] = useState('');\n  let [next96HoursIndex, update96HoursIndex] = useState({});\n  let [next120HoursTemp, update120HoursTemp] = useState(0);\n  let [next120HoursTime, update120HoursTime] = useState('');\n  let [next120HoursIndex, update120HoursIndex] = useState({});\n  let [next144HoursTemp, update144HoursTemp] = useState(0);\n  let [next144HoursTime, update144HoursTime] = useState('');\n  let [next144HoursIndex, update144HoursIndex] = useState({});\n\n  let handleChange = e => {\n    updateInput(e.target.value);\n  };\n\n  let searchCity = () => {\n    let APIKEY = `73d060bc08c941c1ae6cdf8b5d323c8c`;\n\n    const callLocation = async () => {\n      const data = await axios(`https://api.opencagedata.com/geocode/v1/json?q=${input}&key=${APIKEY}`); // Since api request for coordinates takes too long to update to state\n      // we are passing the values directly into the API call for weather\n\n      if (data.data.results > 0) {\n        callApi(data.data.results[0].geometry.lat, data.data.results[0].geometry.lng);\n        updateSavedCity(input);\n        updateSavedCountry(data.data.results[0].components.country);\n        updateInput('');\n      } else {\n        return;\n\n        /*#__PURE__*/\n        React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    callLocation();\n\n    const callApi = async (lat, long) => {\n      const response = await axios(`https://cors-anywhere.herokuapp.com/https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${lat}&lon=${long}`); // console.log(response.data.properties.timeseries)\n\n      updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature);\n      updateTime(response.data.properties.timeseries[0].time);\n      updateCurrentIndex(response.data.properties.timeseries[0].data);\n      update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature);\n      update24HoursTime(response.data.properties.timeseries[24].time);\n      update24HoursIndex(response.data.properties.timeseries[24].data);\n      update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature);\n      update48HoursTime(response.data.properties.timeseries[48].time);\n      update48HoursIndex(response.data.properties.timeseries[48].data);\n      update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature);\n      update72HoursTime(response.data.properties.timeseries[64].time);\n      update72HoursIndex(response.data.properties.timeseries[64].data);\n      update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature);\n      update96HoursTime(response.data.properties.timeseries[69].time);\n      update96HoursIndex(response.data.properties.timeseries[69].data);\n      update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature);\n      update120HoursTime(response.data.properties.timeseries[73].time);\n      update120HoursIndex(response.data.properties.timeseries[73].data);\n      update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature);\n      update144HoursTime(response.data.properties.timeseries[77].time);\n      update144HoursIndex(response.data.properties.timeseries[77].data);\n    };\n  };\n\n  useEffect(() => {\n    // Checks if user has geolocation available\n    // if ('geolocation' in navigator) {\n    //   console.log('Available')\n    // } else {\n    //   console.log('Not Available')\n    // }\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let userLatitude = position.coords.latitude;\n      let userLongitude = position.coords.longitude;\n\n      const callCurrentLocation = async () => {\n        let APIKEY = `73d060bc08c941c1ae6cdf8b5d323c8c`;\n        const response = await axios(`https://api.opencagedata.com/geocode/v1/json?q=${userLatitude}+${userLongitude}&key=${APIKEY}`);\n        updateSavedCity(response.data.results[0].components.city);\n        updateSavedCountry(response.data.results[0].components.country);\n      };\n\n      callCurrentLocation();\n    }); // Request user to share their location\n\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let userLatitude = position.coords.latitude;\n      let userLongitude = position.coords.longitude;\n\n      const callApi = async () => {\n        const response = await axios(`https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${userLatitude}&lon=${userLongitude}`);\n        updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature);\n        updateTime(response.data.properties.timeseries[0].time);\n        updateCurrentIndex(response.data.properties.timeseries[0].data);\n        update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature);\n        update24HoursTime(response.data.properties.timeseries[24].time);\n        update24HoursIndex(response.data.properties.timeseries[24].data);\n        update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature);\n        update48HoursTime(response.data.properties.timeseries[48].time);\n        update48HoursIndex(response.data.properties.timeseries[48].data);\n        update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature);\n        update72HoursTime(response.data.properties.timeseries[64].time);\n        update72HoursIndex(response.data.properties.timeseries[64].data);\n        update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature);\n        update96HoursTime(response.data.properties.timeseries[69].time);\n        update96HoursIndex(response.data.properties.timeseries[69].data);\n        update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature);\n        update120HoursTime(response.data.properties.timeseries[73].time);\n        update120HoursIndex(response.data.properties.timeseries[73].data);\n        update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature);\n        update144HoursTime(response.data.properties.timeseries[77].time);\n        update144HoursIndex(response.data.properties.timeseries[77].data);\n      };\n\n      callApi();\n    });\n  }, []); // Cannot make more than one call to the object!\n\n  if (currentTime) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Type your city here\",\n      onChange: handleChange,\n      value: input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: searchCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weather/${currentTime}`,\n        state: {\n          currentIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HomeTemp, {\n      currentTime: currentTime,\n      currentTemp: currentTemp,\n      currentCity: savedCity,\n      currentCountry: savedCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn24Hours/${next24HoursTime}`,\n        state: {\n          next24HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next24HoursTime,\n      newTemp: next24HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn48Hours/${next48HoursTime}`,\n        state: {\n          next48HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next48HoursTime,\n      newTemp: next48HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn72Hours/${next72HoursTime}`,\n        state: {\n          next72HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next72HoursTime,\n      newTemp: next72HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn96Hours/${next96HoursTime}`,\n        state: {\n          next96HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next96HoursTime,\n      newTemp: next96HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn120Hours/${next120HoursTime}`,\n        state: {\n          next120HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next120HoursTime,\n      newTemp: next120HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn144Hours/${next144HoursTime}`,\n        state: {\n          next144HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next144HoursTime,\n      newTemp: next144HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/acarneiro/General-Assembly/unit-2/project2/weather-app/src/Home.js"],"names":["React","useState","useEffect","axios","HomeTemp","NextTemp","Link","Home","input","updateInput","savedCity","updateSavedCity","savedCountry","updateSavedCountry","currentTemp","updateTemp","currentTime","updateTime","currentIndex","updateCurrentIndex","next24HoursTemp","update24HoursTemp","next24HoursTime","update24HoursTime","next24HoursIndex","update24HoursIndex","next48HoursTemp","update48HoursTemp","next48HoursTime","update48HoursTime","next48HoursIndex","update48HoursIndex","next72HoursTemp","update72HoursTemp","next72HoursTime","update72HoursTime","next72HoursIndex","update72HoursIndex","next96HoursTemp","update96HoursTemp","next96HoursTime","update96HoursTime","next96HoursIndex","update96HoursIndex","next120HoursTemp","update120HoursTemp","next120HoursTime","update120HoursTime","next120HoursIndex","update120HoursIndex","next144HoursTemp","update144HoursTemp","next144HoursTime","update144HoursTime","next144HoursIndex","update144HoursIndex","handleChange","e","target","value","searchCity","APIKEY","callLocation","data","results","callApi","geometry","lat","lng","components","country","long","response","properties","timeseries","instant","details","air_temperature","time","navigator","geolocation","getCurrentPosition","position","userLatitude","coords","latitude","userLongitude","longitude","callCurrentLocation","city","pathname","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport HomeTemp from './HomeTemp.js'\nimport NextTemp from './NextTemp.js'\nimport './App.css'\nimport {Link} from 'react-router-dom'\n\nfunction Home() {\n\n  let [input, updateInput] = useState('')\n  let [savedCity, updateSavedCity] = useState('')\n  let [savedCountry, updateSavedCountry] = useState('')\n\n  let [currentTemp, updateTemp] = useState(0)\n  let [currentTime, updateTime] = useState('')\n  let [currentIndex, updateCurrentIndex] = useState({})\n\n  let [next24HoursTemp, update24HoursTemp] = useState(0)\n  let [next24HoursTime, update24HoursTime] = useState('')\n  let [next24HoursIndex, update24HoursIndex] = useState({})\n\n  let [next48HoursTemp, update48HoursTemp] = useState(0)\n  let [next48HoursTime, update48HoursTime] = useState('')\n  let [next48HoursIndex, update48HoursIndex] = useState({})\n\n  let [next72HoursTemp, update72HoursTemp] = useState(0)\n  let [next72HoursTime, update72HoursTime] = useState('')\n  let [next72HoursIndex, update72HoursIndex] = useState({})\n  \n  let [next96HoursTemp, update96HoursTemp] = useState(0)\n  let [next96HoursTime, update96HoursTime] = useState('')\n  let [next96HoursIndex, update96HoursIndex] = useState({})\n\n  let [next120HoursTemp, update120HoursTemp] = useState(0)\n  let [next120HoursTime, update120HoursTime] = useState('')\n  let [next120HoursIndex, update120HoursIndex] = useState({})\n\n  let [next144HoursTemp, update144HoursTemp] = useState(0)\n  let [next144HoursTime, update144HoursTime] = useState('')\n  let [next144HoursIndex, update144HoursIndex] = useState({})\n\n  let handleChange = (e) => {\n    updateInput(e.target.value)\n  }\n  \n  let searchCity = () => {\n    let APIKEY = `73d060bc08c941c1ae6cdf8b5d323c8c`\n    const callLocation = async () => {\n      const data = await axios(`https://api.opencagedata.com/geocode/v1/json?q=${input}&key=${APIKEY}`)\n      // Since api request for coordinates takes too long to update to state\n      // we are passing the values directly into the API call for weather\n      if (data.data.results > 0) {\n        callApi(data.data.results[0].geometry.lat, data.data.results[0].geometry.lng)\n        updateSavedCity(input)\n        updateSavedCountry(data.data.results[0].components.country);\n        updateInput('')\n      } else {\n        return \n        (<>\n          <p></p>\n        </>\n        )\n      }\n    }\n    callLocation()\n    \n    const callApi = async (lat, long) => {\n      const response = await axios(`https://cors-anywhere.herokuapp.com/https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${lat}&lon=${long}`)\n      // console.log(response.data.properties.timeseries)\n  \n      updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature)\n      updateTime(response.data.properties.timeseries[0].time)\n      updateCurrentIndex(response.data.properties.timeseries[0].data)\n\n      update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature)\n      update24HoursTime(response.data.properties.timeseries[24].time)\n      update24HoursIndex(response.data.properties.timeseries[24].data)\n  \n      update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature)\n      update48HoursTime(response.data.properties.timeseries[48].time)\n      update48HoursIndex(response.data.properties.timeseries[48].data)\n  \n      update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature)\n      update72HoursTime(response.data.properties.timeseries[64].time)\n      update72HoursIndex(response.data.properties.timeseries[64].data)\n  \n      update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature)\n      update96HoursTime(response.data.properties.timeseries[69].time)\n      update96HoursIndex(response.data.properties.timeseries[69].data)\n  \n      update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature)\n      update120HoursTime(response.data.properties.timeseries[73].time)\n      update120HoursIndex(response.data.properties.timeseries[73].data)\n  \n      update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature)\n      update144HoursTime(response.data.properties.timeseries[77].time)\n      update144HoursIndex(response.data.properties.timeseries[77].data)\n    }\n  }\n\n  useEffect(() => {\n    // Checks if user has geolocation available\n    // if ('geolocation' in navigator) {\n    //   console.log('Available')\n    // } else {\n    //   console.log('Not Available')\n    // }\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let userLatitude = position.coords.latitude\n      let userLongitude = position.coords.longitude\n\n      const callCurrentLocation = async () => {\n        let APIKEY = `73d060bc08c941c1ae6cdf8b5d323c8c`\n        const response = await axios(`https://api.opencagedata.com/geocode/v1/json?q=${userLatitude}+${userLongitude}&key=${APIKEY}`)\n        updateSavedCity(response.data.results[0].components.city)\n        updateSavedCountry(response.data.results[0].components.country);\n      }\n      callCurrentLocation()\n    })\n\n\n    // Request user to share their location\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let userLatitude = position.coords.latitude\n      let userLongitude = position.coords.longitude\n\n      const callApi = async () => {\n        const response = await axios(`https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${userLatitude}&lon=${userLongitude}`)\n      \n        updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature)\n        updateTime(response.data.properties.timeseries[0].time)\n        updateCurrentIndex(response.data.properties.timeseries[0].data)\n        \n        update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature)\n        update24HoursTime(response.data.properties.timeseries[24].time)\n        update24HoursIndex(response.data.properties.timeseries[24].data)\n\n        update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature)\n        update48HoursTime(response.data.properties.timeseries[48].time)\n        update48HoursIndex(response.data.properties.timeseries[48].data)\n\n        update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature)\n        update72HoursTime(response.data.properties.timeseries[64].time)\n        update72HoursIndex(response.data.properties.timeseries[64].data)\n\n        update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature)\n        update96HoursTime(response.data.properties.timeseries[69].time)\n        update96HoursIndex(response.data.properties.timeseries[69].data)\n\n        update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature)\n        update120HoursTime(response.data.properties.timeseries[73].time)\n        update120HoursIndex(response.data.properties.timeseries[73].data)\n\n        update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature)\n        update144HoursTime(response.data.properties.timeseries[77].time)\n        update144HoursIndex(response.data.properties.timeseries[77].data)\n\n      }\n      callApi()\n    })\n  }, [])\n  // Cannot make more than one call to the object!\n\n  if (currentTime) {\n    return (\n      <>\n        <div>\n          <input placeholder='Type your city here' onChange={handleChange} value={input}></input>\n          <button onClick={searchCity}>Search</button>\n        </div>\n\n        <Link to={{\n          pathname: `/weather/${currentTime}`,\n          state: { currentIndex }\n        }} >\n          <HomeTemp currentTime={currentTime} currentTemp={currentTemp} currentCity={savedCity} currentCountry={savedCountry}/>\n        </Link>\n      \n        <div className='container'>\n          <Link to={{\n            pathname: `/weatherIn24Hours/${next24HoursTime}`,\n            state: { next24HoursIndex }\n          }}>\n            <NextTemp newTime={next24HoursTime} newTemp={next24HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn48Hours/${next48HoursTime}`,\n            state: { next48HoursIndex }\n          }}>\n            <NextTemp newTime={next48HoursTime} newTemp={next48HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn72Hours/${next72HoursTime}`,\n            state: { next72HoursIndex }\n          }}>\n            <NextTemp newTime={next72HoursTime} newTemp={next72HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn96Hours/${next96HoursTime}`,\n            state: { next96HoursIndex }\n          }}>\n            <NextTemp newTime={next96HoursTime} newTemp={next96HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn120Hours/${next120HoursTime}`,\n            state: { next120HoursIndex }\n          }}>\n            <NextTemp newTime={next120HoursTime} newTemp={next120HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn144Hours/${next144HoursTime}`,\n            state: { next144HoursIndex }\n          }}>\n            <NextTemp newTime={next144HoursTime} newTemp={next144HoursTemp} />\n          </Link>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <p className='loading-text'>Loading...</p>\n      </>\n    )\n  }\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}