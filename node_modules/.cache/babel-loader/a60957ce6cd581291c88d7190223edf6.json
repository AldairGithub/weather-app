{"ast":null,"code":"var _jsxFileName = \"/Users/acarneiro/General-Assembly/unit-2/project2/weather-app/src/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HomeTemp from './HomeTemp.js';\nimport NextTemp from './NextTemp.js';\nimport './App.css';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n  let [city, updateCity] = useState('');\n  let [latitude, updateLatitude] = useState();\n  let [longitude, updateLongitude] = useState();\n  let [currentTemp, updateTemp] = useState(0);\n  let [currentTime, updateTime] = useState('');\n  let [currentIndex, updateCurrentIndex] = useState({});\n  let [next24HoursTemp, update24HoursTemp] = useState(0);\n  let [next24HoursTime, update24HoursTime] = useState('');\n  let [next24HoursIndex, update24HoursIndex] = useState({});\n  let [next48HoursTemp, update48HoursTemp] = useState(0);\n  let [next48HoursTime, update48HoursTime] = useState('');\n  let [next48HoursIndex, update48HoursIndex] = useState({});\n  let [next72HoursTemp, update72HoursTemp] = useState(0);\n  let [next72HoursTime, update72HoursTime] = useState('');\n  let [next72HoursIndex, update72HoursIndex] = useState({});\n  let [next96HoursTemp, update96HoursTemp] = useState(0);\n  let [next96HoursTime, update96HoursTime] = useState('');\n  let [next96HoursIndex, update96HoursIndex] = useState({});\n  let [next120HoursTemp, update120HoursTemp] = useState(0);\n  let [next120HoursTime, update120HoursTime] = useState('');\n  let [next120HoursIndex, update120HoursIndex] = useState({});\n  let [next144HoursTemp, update144HoursTemp] = useState(0);\n  let [next144HoursTime, update144HoursTime] = useState('');\n  let [next144HoursIndex, update144HoursIndex] = useState({});\n\n  let handleChange = e => {\n    updateCity(e.target.value);\n  };\n\n  let searchCity = () => {\n    let APIKEY = `73d060bc08c941c1ae6cdf8b5d323c8c`;\n\n    const callLocation = async () => {\n      const data = await axios(`https://api.opencagedata.com/geocode/v1/json?q=${city}&key=${APIKEY}`);\n      updateLatitude(data.data.results[0].geometry.lat);\n      updateLongitude(data.data.results[0].geometry.lng);\n      callApi();\n    };\n\n    console.log(`after change: ${latitude}`);\n\n    const callApi = async () => {\n      const response = await axios(`https://cors-anywhere.herokuapp.com/https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${latitude}&lon=${longitude}`); // console.log(response.data.properties.timeseries)\n\n      updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature);\n      updateTime(response.data.properties.timeseries[0].time);\n      updateCurrentIndex(response.data.properties.timeseries[0].data);\n      update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature);\n      update24HoursTime(response.data.properties.timeseries[24].time);\n      update24HoursIndex(response.data.properties.timeseries[24].data);\n      update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature);\n      update48HoursTime(response.data.properties.timeseries[48].time);\n      update48HoursIndex(response.data.properties.timeseries[48].data);\n      update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature);\n      update72HoursTime(response.data.properties.timeseries[64].time);\n      update72HoursIndex(response.data.properties.timeseries[64].data);\n      update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature);\n      update96HoursTime(response.data.properties.timeseries[69].time);\n      update96HoursIndex(response.data.properties.timeseries[69].data);\n      update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature);\n      update120HoursTime(response.data.properties.timeseries[73].time);\n      update120HoursIndex(response.data.properties.timeseries[73].data);\n      update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature);\n      update144HoursTime(response.data.properties.timeseries[77].time);\n      update144HoursIndex(response.data.properties.timeseries[77].data);\n      callLocation();\n    };\n\n    callApi();\n  };\n\n  useEffect(() => {\n    // Checks if user has geolocation available\n    // if ('geolocation' in navigator) {\n    //   console.log('Available')\n    // } else {\n    //   console.log('Not Available')\n    // }\n    // Request user to share their location\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let userLatitude = position.coords.latitude;\n      let userLongitude = position.coords.longitude;\n\n      const callApi = async () => {\n        const response = await axios(`https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${userLatitude}&lon=${userLongitude}`);\n        updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature);\n        updateTime(response.data.properties.timeseries[0].time);\n        updateCurrentIndex(response.data.properties.timeseries[0].data);\n        update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature);\n        update24HoursTime(response.data.properties.timeseries[24].time);\n        update24HoursIndex(response.data.properties.timeseries[24].data);\n        update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature);\n        update48HoursTime(response.data.properties.timeseries[48].time);\n        update48HoursIndex(response.data.properties.timeseries[48].data);\n        update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature);\n        update72HoursTime(response.data.properties.timeseries[64].time);\n        update72HoursIndex(response.data.properties.timeseries[64].data);\n        update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature);\n        update96HoursTime(response.data.properties.timeseries[69].time);\n        update96HoursIndex(response.data.properties.timeseries[69].data);\n        update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature);\n        update120HoursTime(response.data.properties.timeseries[73].time);\n        update120HoursIndex(response.data.properties.timeseries[73].data);\n        update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature);\n        update144HoursTime(response.data.properties.timeseries[77].time);\n        update144HoursIndex(response.data.properties.timeseries[77].data);\n      };\n\n      callApi();\n    });\n  }, []); // Cannot make more than one call to the object!\n\n  if (currentTime) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Type your city here\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: searchCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weather/${currentTime}`,\n        state: {\n          currentIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HomeTemp, {\n      currentTime: currentTime,\n      currentTemp: currentTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn24Hours/${next24HoursTime}`,\n        state: {\n          next24HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next24HoursTime,\n      newTemp: next24HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn48Hours/${next48HoursTime}`,\n        state: {\n          next48HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next48HoursTime,\n      newTemp: next48HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn72Hours/${next72HoursTime}`,\n        state: {\n          next72HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next72HoursTime,\n      newTemp: next72HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn96Hours/${next96HoursTime}`,\n        state: {\n          next96HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next96HoursTime,\n      newTemp: next96HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn120Hours/${next120HoursTime}`,\n        state: {\n          next120HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next120HoursTime,\n      newTemp: next120HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/weatherIn144Hours/${next144HoursTime}`,\n        state: {\n          next144HoursIndex\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NextTemp, {\n      newTime: next144HoursTime,\n      newTemp: next144HoursTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/acarneiro/General-Assembly/unit-2/project2/weather-app/src/Home.js"],"names":["React","useState","useEffect","axios","HomeTemp","NextTemp","Link","Home","city","updateCity","latitude","updateLatitude","longitude","updateLongitude","currentTemp","updateTemp","currentTime","updateTime","currentIndex","updateCurrentIndex","next24HoursTemp","update24HoursTemp","next24HoursTime","update24HoursTime","next24HoursIndex","update24HoursIndex","next48HoursTemp","update48HoursTemp","next48HoursTime","update48HoursTime","next48HoursIndex","update48HoursIndex","next72HoursTemp","update72HoursTemp","next72HoursTime","update72HoursTime","next72HoursIndex","update72HoursIndex","next96HoursTemp","update96HoursTemp","next96HoursTime","update96HoursTime","next96HoursIndex","update96HoursIndex","next120HoursTemp","update120HoursTemp","next120HoursTime","update120HoursTime","next120HoursIndex","update120HoursIndex","next144HoursTemp","update144HoursTemp","next144HoursTime","update144HoursTime","next144HoursIndex","update144HoursIndex","handleChange","e","target","value","searchCity","APIKEY","callLocation","data","results","geometry","lat","lng","callApi","console","log","response","properties","timeseries","instant","details","air_temperature","time","navigator","geolocation","getCurrentPosition","position","userLatitude","coords","userLongitude","pathname","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport HomeTemp from './HomeTemp.js'\nimport NextTemp from './NextTemp.js'\nimport './App.css'\nimport {Link} from 'react-router-dom'\n\nfunction Home() {\n\n  let [city, updateCity] = useState('')\n  let [latitude, updateLatitude] = useState()\n  let [longitude, updateLongitude] = useState()\n\n  let [currentTemp, updateTemp] = useState(0)\n  let [currentTime, updateTime] = useState('')\n  let [currentIndex, updateCurrentIndex] = useState({})\n\n  let [next24HoursTemp, update24HoursTemp] = useState(0)\n  let [next24HoursTime, update24HoursTime] = useState('')\n  let [next24HoursIndex, update24HoursIndex] = useState({})\n\n  let [next48HoursTemp, update48HoursTemp] = useState(0)\n  let [next48HoursTime, update48HoursTime] = useState('')\n  let [next48HoursIndex, update48HoursIndex] = useState({})\n\n  let [next72HoursTemp, update72HoursTemp] = useState(0)\n  let [next72HoursTime, update72HoursTime] = useState('')\n  let [next72HoursIndex, update72HoursIndex] = useState({})\n  \n  let [next96HoursTemp, update96HoursTemp] = useState(0)\n  let [next96HoursTime, update96HoursTime] = useState('')\n  let [next96HoursIndex, update96HoursIndex] = useState({})\n\n  let [next120HoursTemp, update120HoursTemp] = useState(0)\n  let [next120HoursTime, update120HoursTime] = useState('')\n  let [next120HoursIndex, update120HoursIndex] = useState({})\n\n  let [next144HoursTemp, update144HoursTemp] = useState(0)\n  let [next144HoursTime, update144HoursTime] = useState('')\n  let [next144HoursIndex, update144HoursIndex] = useState({})\n\n  let handleChange = (e) => {\n    updateCity(e.target.value)\n  }\n  \n  let searchCity = () => {\n\n    let APIKEY = `73d060bc08c941c1ae6cdf8b5d323c8c`\n    const callLocation = async () => {\n      const data = await axios(`https://api.opencagedata.com/geocode/v1/json?q=${city}&key=${APIKEY}`)\n      updateLatitude(data.data.results[0].geometry.lat)\n      updateLongitude(data.data.results[0].geometry.lng)\n      callApi()\n    }\n\n    console.log(`after change: ${latitude}`)\n    \n    const callApi = async () => {\n          const response = await axios(`https://cors-anywhere.herokuapp.com/https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${latitude}&lon=${longitude}`)\n          // console.log(response.data.properties.timeseries)\n  \n          updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature)\n          updateTime(response.data.properties.timeseries[0].time)\n          updateCurrentIndex(response.data.properties.timeseries[0].data)\n    \n          update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature)\n          update24HoursTime(response.data.properties.timeseries[24].time)\n          update24HoursIndex(response.data.properties.timeseries[24].data)\n  \n          update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature)\n          update48HoursTime(response.data.properties.timeseries[48].time)\n          update48HoursIndex(response.data.properties.timeseries[48].data)\n  \n          update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature)\n          update72HoursTime(response.data.properties.timeseries[64].time)\n          update72HoursIndex(response.data.properties.timeseries[64].data)\n  \n          update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature)\n          update96HoursTime(response.data.properties.timeseries[69].time)\n          update96HoursIndex(response.data.properties.timeseries[69].data)\n  \n          update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature)\n          update120HoursTime(response.data.properties.timeseries[73].time)\n          update120HoursIndex(response.data.properties.timeseries[73].data)\n  \n          update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature)\n          update144HoursTime(response.data.properties.timeseries[77].time)\n      update144HoursIndex(response.data.properties.timeseries[77].data)\n      callLocation()\n    }\n    callApi()\n  }\n  \n\n  useEffect(() => {\n    // Checks if user has geolocation available\n    // if ('geolocation' in navigator) {\n    //   console.log('Available')\n    // } else {\n    //   console.log('Not Available')\n    // }\n    \n\n    // Request user to share their location\n    navigator.geolocation.getCurrentPosition(function (position) {\n      let userLatitude = position.coords.latitude\n      let userLongitude = position.coords.longitude\n      const callApi = async () => {\n        const response = await axios(`https://api.met.no/weatherapi/locationforecast/2.0/compact.json?lat=${userLatitude}&lon=${userLongitude}`)\n      \n        updateTemp(response.data.properties.timeseries[0].data.instant.details.air_temperature)\n        updateTime(response.data.properties.timeseries[0].time)\n        updateCurrentIndex(response.data.properties.timeseries[0].data)\n        \n        update24HoursTemp(response.data.properties.timeseries[24].data.instant.details.air_temperature)\n        update24HoursTime(response.data.properties.timeseries[24].time)\n        update24HoursIndex(response.data.properties.timeseries[24].data)\n\n        update48HoursTemp(response.data.properties.timeseries[48].data.instant.details.air_temperature)\n        update48HoursTime(response.data.properties.timeseries[48].time)\n        update48HoursIndex(response.data.properties.timeseries[48].data)\n\n        update72HoursTemp(response.data.properties.timeseries[64].data.instant.details.air_temperature)\n        update72HoursTime(response.data.properties.timeseries[64].time)\n        update72HoursIndex(response.data.properties.timeseries[64].data)\n\n        update96HoursTemp(response.data.properties.timeseries[69].data.instant.details.air_temperature)\n        update96HoursTime(response.data.properties.timeseries[69].time)\n        update96HoursIndex(response.data.properties.timeseries[69].data)\n\n        update120HoursTemp(response.data.properties.timeseries[73].data.instant.details.air_temperature)\n        update120HoursTime(response.data.properties.timeseries[73].time)\n        update120HoursIndex(response.data.properties.timeseries[73].data)\n\n        update144HoursTemp(response.data.properties.timeseries[77].data.instant.details.air_temperature)\n        update144HoursTime(response.data.properties.timeseries[77].time)\n        update144HoursIndex(response.data.properties.timeseries[77].data)\n\n      }\n      callApi()\n    })\n  }, [])\n  // Cannot make more than one call to the object!\n\n  if (currentTime) {\n    return (\n      <>\n        <div>\n          <input placeholder='Type your city here' onChange={handleChange}></input>\n          <button onClick={searchCity}>Search</button>\n        </div>\n\n        <Link to={{\n          pathname: `/weather/${currentTime}`,\n          state: { currentIndex }\n        }} >\n          <HomeTemp currentTime={currentTime} currentTemp={currentTemp} />\n        </Link>\n      \n        <div className='container'>\n          <Link to={{\n            pathname: `/weatherIn24Hours/${next24HoursTime}`,\n            state: { next24HoursIndex }\n          }}>\n            <NextTemp newTime={next24HoursTime} newTemp={next24HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn48Hours/${next48HoursTime}`,\n            state: { next48HoursIndex }\n          }}>\n            <NextTemp newTime={next48HoursTime} newTemp={next48HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn72Hours/${next72HoursTime}`,\n            state: { next72HoursIndex }\n          }}>\n            <NextTemp newTime={next72HoursTime} newTemp={next72HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn96Hours/${next96HoursTime}`,\n            state: { next96HoursIndex }\n          }}>\n            <NextTemp newTime={next96HoursTime} newTemp={next96HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn120Hours/${next120HoursTime}`,\n            state: { next120HoursIndex }\n          }}>\n            <NextTemp newTime={next120HoursTime} newTemp={next120HoursTemp} />\n          </Link>\n\n          <Link to={{\n            pathname: `/weatherIn144Hours/${next144HoursTime}`,\n            state: { next144HoursIndex }\n          }}>\n            <NextTemp newTime={next144HoursTime} newTemp={next144HoursTemp} />\n          </Link>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <p className='loading-text'>Loading...</p>\n      </>\n    )\n  }\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}